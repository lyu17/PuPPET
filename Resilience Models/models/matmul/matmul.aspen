// serial_matmul.aspen
// Simple Matrix-Matrix Multiply

model matmul {

// Matrix size
param n = 1000

// How many times to repeat the mutliplication
param nTimes = 5

// Word Size (precision) in bytes
param wordSize = 4

// Data structures
data matA as Matrix(n, n, wordSize)
data matB as Matrix(n, n, wordSize)
data matC as Matrix(n, n, wordSize)

// The matrix multiply kernel
kernel matmul {
  execute mainblock2 [1]
  {
    flops [2 * (n^3)] as sp, fmad, simd
    loads [(n^2) * wordSize] from matA as stride(n)
    loads [(n^2) * wordSize] from matB as stride(1)
    stores [(n^2) * wordSize] to matC as stride(1)
  }
}
// Control Flow (in this case a single kernel)
kernel main {
    iterate [nTimes] { matmul }
}

}
